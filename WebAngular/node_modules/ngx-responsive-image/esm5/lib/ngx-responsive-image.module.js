/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ObserversModule } from '@angular/cdk/observers';
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { BREAKPOINTS } from './breakpoints.token';
import { IMAGE_WIDTHS } from './image-widths.token';
import { MediaService } from './media/media.service';
import { ResponsiveImageDirective } from './responsive-image/responsive-image.directive';
var NgxResponsiveImageModule = /** @class */ (function () {
    function NgxResponsiveImageModule() {
    }
    /**
     * @param {?} breakpoints
     * @param {?} imageWidths
     * @return {?}
     */
    NgxResponsiveImageModule.forRoot = /**
     * @param {?} breakpoints
     * @param {?} imageWidths
     * @return {?}
     */
    function (breakpoints, imageWidths) {
        return {
            ngModule: NgxResponsiveImageModule,
            providers: [
                {
                    provide: BREAKPOINTS,
                    useValue: breakpoints
                },
                {
                    provide: IMAGE_WIDTHS,
                    useValue: imageWidths
                },
                MediaService
            ]
        };
    };
    NgxResponsiveImageModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [ResponsiveImageDirective],
                    imports: [ObserversModule, CommonModule],
                    exports: [ResponsiveImageDirective]
                },] }
    ];
    return NgxResponsiveImageModule;
}());
export { NgxResponsiveImageModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LXJlc3BvbnNpdmUtaW1hZ2UubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LXJlc3BvbnNpdmUtaW1hZ2UvIiwic291cmNlcyI6WyJsaWIvbmd4LXJlc3BvbnNpdmUtaW1hZ2UubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDekQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBdUIsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUNsRCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDcEQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQ3JELE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLCtDQUErQyxDQUFDO0FBRXpGO0lBQUE7SUF5QkEsQ0FBQzs7Ozs7O0lBbkJRLGdDQUFPOzs7OztJQUFkLFVBQ0UsV0FBcUIsRUFDckIsV0FBcUI7UUFFckIsT0FBTztZQUNMLFFBQVEsRUFBRSx3QkFBd0I7WUFDbEMsU0FBUyxFQUFFO2dCQUNUO29CQUNFLE9BQU8sRUFBRSxXQUFXO29CQUNwQixRQUFRLEVBQUUsV0FBVztpQkFDdEI7Z0JBQ0Q7b0JBQ0UsT0FBTyxFQUFFLFlBQVk7b0JBQ3JCLFFBQVEsRUFBRSxXQUFXO2lCQUN0QjtnQkFDRCxZQUFZO2FBQ2I7U0FDRixDQUFDO0lBQ0osQ0FBQzs7Z0JBeEJGLFFBQVEsU0FBQztvQkFDUixZQUFZLEVBQUUsQ0FBQyx3QkFBd0IsQ0FBQztvQkFDeEMsT0FBTyxFQUFFLENBQUMsZUFBZSxFQUFFLFlBQVksQ0FBQztvQkFDeEMsT0FBTyxFQUFFLENBQUMsd0JBQXdCLENBQUM7aUJBQ3BDOztJQXFCRCwrQkFBQztDQUFBLEFBekJELElBeUJDO1NBcEJZLHdCQUF3QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9ic2VydmVyc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9vYnNlcnZlcnMnO1xyXG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xyXG5pbXBvcnQgeyBNb2R1bGVXaXRoUHJvdmlkZXJzLCBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBCUkVBS1BPSU5UUyB9IGZyb20gJy4vYnJlYWtwb2ludHMudG9rZW4nO1xyXG5pbXBvcnQgeyBJTUFHRV9XSURUSFMgfSBmcm9tICcuL2ltYWdlLXdpZHRocy50b2tlbic7XHJcbmltcG9ydCB7IE1lZGlhU2VydmljZSB9IGZyb20gJy4vbWVkaWEvbWVkaWEuc2VydmljZSc7XHJcbmltcG9ydCB7IFJlc3BvbnNpdmVJbWFnZURpcmVjdGl2ZSB9IGZyb20gJy4vcmVzcG9uc2l2ZS1pbWFnZS9yZXNwb25zaXZlLWltYWdlLmRpcmVjdGl2ZSc7XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGRlY2xhcmF0aW9uczogW1Jlc3BvbnNpdmVJbWFnZURpcmVjdGl2ZV0sXHJcbiAgaW1wb3J0czogW09ic2VydmVyc01vZHVsZSwgQ29tbW9uTW9kdWxlXSxcclxuICBleHBvcnRzOiBbUmVzcG9uc2l2ZUltYWdlRGlyZWN0aXZlXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgTmd4UmVzcG9uc2l2ZUltYWdlTW9kdWxlIHtcclxuICBzdGF0aWMgZm9yUm9vdChcclxuICAgIGJyZWFrcG9pbnRzOiBzdHJpbmdbXSxcclxuICAgIGltYWdlV2lkdGhzOiBudW1iZXJbXVxyXG4gICk6IE1vZHVsZVdpdGhQcm92aWRlcnMge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgbmdNb2R1bGU6IE5neFJlc3BvbnNpdmVJbWFnZU1vZHVsZSxcclxuICAgICAgcHJvdmlkZXJzOiBbXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgcHJvdmlkZTogQlJFQUtQT0lOVFMsXHJcbiAgICAgICAgICB1c2VWYWx1ZTogYnJlYWtwb2ludHNcclxuICAgICAgICB9LFxyXG4gICAgICAgIHtcclxuICAgICAgICAgIHByb3ZpZGU6IElNQUdFX1dJRFRIUyxcclxuICAgICAgICAgIHVzZVZhbHVlOiBpbWFnZVdpZHRoc1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgTWVkaWFTZXJ2aWNlXHJcbiAgICAgIF1cclxuICAgIH07XHJcbiAgfVxyXG59XHJcbiJdfQ==